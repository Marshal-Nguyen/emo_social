import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Shield, X, Heart, AlertTriangle, Scale, BookOpen } from "lucide-react";

const CommunityRulesPage = () => {
    const [showFullRules, setShowFullRules] = useState(false);

    const openFullRules = () => {
        setShowFullRules(true);
    };

    const closeFullRules = () => {
        setShowFullRules(false);
    };

    const quickRules = [
        {
            title: "Giao ti·∫øp t√¥n tr·ªçng",
            icon: "üí¨",
            description: "H√£y trao ƒë·ªïi b·∫±ng th√°i ƒë·ªô l·ªãch s·ª±, c·∫£m th√¥ng v√† th·∫•u hi·ªÉu. T√¥n tr·ªçng quan ƒëi·ªÉm, c·∫£m x√∫c c·ªßa ng∆∞·ªùi kh√°c tr√°nh l·ªùi l·∫Ω c√¥ng k√≠ch, ph√°n x√©t ho·∫∑c g√¢y t·ªïn th∆∞∆°ng."
        },
        {
            title: "H·ªó tr·ª£, kh√¥ng ph√°n x√©t",
            icon: "ü§ù",
            description: "L·∫Øng nghe v·ªõi s·ª± quan t√¢m ch√¢n th√†nh. Thay v√¨ ch·ªâ tr√≠ch hay so s√°nh, h√£y c√¥ng nh·∫≠n c·∫£m x√∫c c·ªßa ng∆∞·ªùi kh√°c v√† th·ªÉ hi·ªán s·ª± ƒë·ªìng h√†nh m·ªôt c√°ch tinh t·∫ø."
        },
        {
            title: "Gi·ªØ ƒë√∫ng ch·ªß ƒë·ªÅ",
            icon: "üéØ",
            description: "M·ªçi th·∫£o lu·∫≠n n√™n xoay quanh ch·ªß ƒë·ªÅ v·ªÅ s·ª©c kh·ªèe c·∫£m x√∫c, tinh th·∫ßn, tr·∫£i nghi·ªám c√° nh√¢n ho·∫∑c c√°c v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn c·ªông ƒë·ªìng EmoEase."
        },
        {
            title: "T√¥n tr·ªçng quy·ªÅn ri√™ng t∆∞",
            icon: "üîí",
            description: "Kh√¥ng chia s·∫ª th√¥ng tin c√° nh√¢n nh∆∞ h·ªç t√™n ƒë·∫ßy ƒë·ªß, ƒë·ªãa ch·ªâ, s·ªë ƒëi·ªán tho·∫°i, h√¨nh ·∫£nh nh·∫≠n di·ªán... ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n v√† ·∫©n danh cho m·ªçi th√†nh vi√™n."
        }
    ];

    const mandatoryRules = [
        "C·∫•m ng√¥n t·ª´ k·ª≥ th·ªã v√† th√π gh√©t",
        "C·∫•m qu·∫•y r·ªëi, b·∫Øt n·∫°t ho·∫∑c x√∫c ph·∫°m",
        "C·∫•m h√†nh vi ƒëe d·ªça, b·∫°o l·ª±c ho·∫∑c vi ph·∫°m ph√°p lu·∫≠t",
        "C·∫•m n·ªôi dung ti√™u c·ª±c v·ªÅ b·∫£n th√¢n",
        "C·∫•m n·ªôi dung kh√¥ng ph√π h·ª£p ho·∫∑c h·∫πn h√≤",
        "C·∫•m spam, qu·∫£ng c√°o v√† m·ªùi ch√†o c√° nh√¢n",
        "C·∫•m m·∫°o danh ho·∫∑c gi·∫£ m·∫°o danh t√≠nh"
    ];

    const fullRules = {
        guidelines: [
            {
                title: "Giao ti·∫øp t√¥n tr·ªçng",
                description: "H√£y trao ƒë·ªïi b·∫±ng th√°i ƒë·ªô l·ªãch s·ª±, c·∫£m th√¥ng v√† th·∫•u hi·ªÉu. T√¥n tr·ªçng quan ƒëi·ªÉm, c·∫£m x√∫c c·ªßa ng∆∞·ªùi kh√°c tr√°nh l·ªùi l·∫Ω c√¥ng k√≠ch, ph√°n x√©t ho·∫∑c g√¢y t·ªïn th∆∞∆°ng.",
                icon: Heart
            },
            {
                title: "H·ªó tr·ª£, kh√¥ng ph√°n x√©t",
                description: "L·∫Øng nghe v·ªõi s·ª± quan t√¢m ch√¢n th√†nh. Thay v√¨ ch·ªâ tr√≠ch hay so s√°nh, h√£y c√¥ng nh·∫≠n c·∫£m x√∫c c·ªßa ng∆∞·ªùi kh√°c v√† th·ªÉ hi·ªán s·ª± ƒë·ªìng h√†nh m·ªôt c√°ch tinh t·∫ø.",
                icon: Heart
            },
            {
                title: "Ph·∫£n h·ªìi mang t√≠nh x√¢y d·ª±ng",
                description: "Khi ƒë√≥ng g√≥p √Ω ki·∫øn ho·∫∑c g√≥p √Ω, h√£y l√†m v·ªõi thi·ªán √Ω, nh·∫π nh√†ng v√† mang m·ª•c ƒë√≠ch gi√∫p ng∆∞·ªùi kh√°c t·ªët h∆°n.",
                icon: Heart
            },
            {
                title: "Gi·ªØ ƒë√∫ng ch·ªß ƒë·ªÅ",
                description: "M·ªçi th·∫£o lu·∫≠n n√™n xoay quanh ch·ªß ƒë·ªÅ v·ªÅ s·ª©c kh·ªèe c·∫£m x√∫c, tinh th·∫ßn, tr·∫£i nghi·ªám c√° nh√¢n ho·∫∑c c√°c v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn c·ªông ƒë·ªìng EmoEase.",
                icon: Heart
            },
            {
                title: "T√¥n tr·ªçng quy·ªÅn ri√™ng t∆∞",
                description: "Kh√¥ng chia s·∫ª th√¥ng tin c√° nh√¢n nh∆∞ h·ªç t√™n ƒë·∫ßy ƒë·ªß, ƒë·ªãa ch·ªâ, s·ªë ƒëi·ªán tho·∫°i, h√¨nh ·∫£nh nh·∫≠n di·ªán... ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n v√† ·∫©n danh cho m·ªçi th√†nh vi√™n.",
                icon: Shield
            },
            {
                title: "Ghi r√µ ngu·ªìn tr√≠ch d·∫´n",
                description: "Khi chia s·∫ª b√†i vi·∫øt, nghi√™n c·ª©u ho·∫∑c tr√≠ch d·∫´n, vui l√≤ng ghi r√µ ngu·ªìn ƒë·ªÉ th·ªÉ hi·ªán s·ª± t√¥n tr·ªçng b·∫£n quy·ªÅn v√† minh b·∫°ch th√¥ng tin.",
                icon: BookOpen
            },
            {
                title: "T·ª± ƒëi·ªÅu ch·ªânh & B√°o c√°o",
                description: "N·∫øu b·∫Øt g·∫∑p n·ªôi dung kh√¥ng ph√π h·ª£p, h√£y s·ª≠ d·ª•ng ch·ª©c nƒÉng b√°o c√°o ƒë·ªÉ Ban qu·∫£n tr·ªã xem x√©t v√† x·ª≠ l√Ω.",
                icon: AlertTriangle
            }
        ],
        mandatory: [
            {
                title: "C·∫•m ng√¥n t·ª´ k·ª≥ th·ªã v√† th√π gh√©t",
                description: "Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng b·∫•t k·ª≥ l·ªùi n√≥i hay h√†nh vi n√†o mang t√≠nh ph√¢n bi·ªát v·ªÅ gi·ªõi t√≠nh, t√¥n gi√°o, xu·∫•t th√¢n, khuynh h∆∞·ªõng, hay kh·∫£ nƒÉng c√° nh√¢n.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m qu·∫•y r·ªëi, b·∫Øt n·∫°t ho·∫∑c x√∫c ph·∫°m",
                description: "M·ªçi h√†nh vi c·ªë √Ω l√†m t·ªïn th∆∞∆°ng, c√¥ng k√≠ch ho·∫∑c nh·∫Øm v√†o ng∆∞·ªùi kh√°c ƒë·ªÅu b·ªã nghi√™m c·∫•m v√† s·∫Ω b·ªã x√≥a b·ªè.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m h√†nh vi ƒëe d·ªça, b·∫°o l·ª±c ho·∫∑c vi ph·∫°m ph√°p lu·∫≠t",
                description: "C√°c h√†nh vi, l·ªùi n√≥i mang t√≠nh ƒëe d·ªça, k√≠ch ƒë·ªông, ho·∫∑c c√≥ d·∫•u hi·ªáu vi ph·∫°m ph√°p lu·∫≠t s·∫Ω b·ªã x·ª≠ l√Ω nghi√™m v√† b√°o c√°o t·ªõi c∆° quan ch·ª©c nƒÉng khi c·∫ßn thi·∫øt.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m n·ªôi dung ti√™u c·ª±c v·ªÅ b·∫£n th√¢n",
                description: "EmoEase kh√¥ng ph·∫£i l√† n·ªÅn t·∫£ng h·ªó tr·ª£ kh·∫©n c·∫•p. C√°c n·ªôi dung th·ªÉ hi·ªán √Ω ƒë·ªãnh l√†m t·ªïn th∆∞∆°ng b·∫£n th√¢n ho·∫∑c m√¥ t·∫£ h√†nh vi nguy hi·ªÉm s·∫Ω b·ªã g·ª° b·ªè, ƒë·ªìng th·ªùi ng∆∞·ªùi ƒëƒÉng ƒë∆∞·ª£c khuy·∫øn kh√≠ch t√¨m ki·∫øm s·ª± h·ªó tr·ª£ t·ª´ chuy√™n gia ho·∫∑c t·ªï ch·ª©c ƒë√°ng tin c·∫≠y.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m n·ªôi dung kh√¥ng ph√π h·ª£p ho·∫∑c h·∫πn h√≤",
                description: "C·ªông ƒë·ªìng t·∫≠p trung v√†o chia s·∫ª v√† h·ªó tr·ª£ c·∫£m x√∫c, kh√¥ng ph·∫£i n∆°i cho c√°c m·ª•c ƒë√≠ch h·∫πn h√≤ hay trao ƒë·ªïi n·ªôi dung nh·∫°y c·∫£m.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m spam, qu·∫£ng c√°o v√† m·ªùi ch√†o c√° nh√¢n",
                description: "M·ªçi h√¨nh th·ª©c qu·∫£ng b√°, rao b√°n, ho·∫∑c chia s·∫ª n·ªôi dung kh√¥ng li√™n quan s·∫Ω b·ªã x√≥a.",
                icon: AlertTriangle
            },
            {
                title: "C·∫•m m·∫°o danh ho·∫∑c gi·∫£ m·∫°o danh t√≠nh",
                description: "Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng th√¥ng tin ho·∫∑c h√¨nh ·∫£nh c·ªßa ng∆∞·ªùi kh√°c ƒë·ªÉ t·∫°o t√†i kho·∫£n, g√¢y hi·ªÉu l·∫ßm ho·∫∑c tr·ª•c l·ª£i.",
                icon: AlertTriangle
            }
        ],
        measures: [
            "Nh·∫Øc nh·ªü nh·∫π ho·∫∑c c·∫£nh c√°o ch√≠nh th·ª©c",
            "H·∫°n ch·∫ø t·∫°m th·ªùi (quy·ªÅn ƒëƒÉng b√†i, b√¨nh lu·∫≠n, nh·∫Øn tin)",
            "X√≥a b√†i vi·∫øt ho·∫∑c n·ªôi dung vi ph·∫°m",
            "C·∫•m t√†i kho·∫£n t·∫°m th·ªùi ho·∫∑c vƒ©nh vi·ªÖn (tr∆∞·ªùng h·ª£p nghi√™m tr·ªçng)",
            "Ti·∫øp nh·∫≠n v√† x·ª≠ l√Ω khi·∫øu n·∫°i minh b·∫°ch"
        ],
        philosophy: [
            {
                title: "Minh b·∫°ch & C√¥ng b·∫±ng",
                description: "M·ªçi quy·∫øt ƒë·ªãnh x·ª≠ l√Ω ƒë·ªÅu ƒë∆∞·ª£c th√¥ng b√°o r√µ r√†ng, k√®m l√Ω do c·ª• th·ªÉ ƒë·ªÉ ng∆∞·ªùi d√πng hi·ªÉu v√† r√∫t kinh nghi·ªám."
            },
            {
                title: "∆Øu ti√™n An to√†n",
                description: "C√°c n·ªôi dung c√≥ nguy c∆° ·∫£nh h∆∞·ªüng ti√™u c·ª±c ƒë·∫øn s·ª©c kh·ªèe tinh th·∫ßn ho·∫∑c an to√†n c√° nh√¢n s·∫Ω ƒë∆∞·ª£c xem x√©t v√† x·ª≠ l√Ω kh·∫©n c·∫•p."
            },
            {
                title: "H∆∞·ªõng d·∫´n & Gi√°o d·ª•c",
                description: "Tr∆∞·ªõc khi √°p d·ª•ng bi·ªán ph√°p x·ª≠ l√Ω, EmoEase ∆∞u ti√™n gi·∫£i th√≠ch, h∆∞·ªõng d·∫´n v√† h·ªó tr·ª£ ng∆∞·ªùi d√πng ƒëi·ªÅu ch·ªânh h√†nh vi t√≠ch c·ª±c."
            },
            {
                title: "Quy·ªÅn Khi·∫øu n·∫°i",
                description: "Th√†nh vi√™n c√≥ quy·ªÅn g·ª≠i khi·∫øu n·∫°i n·∫øu cho r·∫±ng quy·∫øt ƒë·ªãnh x·ª≠ l√Ω ch∆∞a ch√≠nh x√°c; m·ªçi ph·∫£n h·ªìi s·∫Ω ƒë∆∞·ª£c xem x√©t c√¥ng b·∫±ng v√† t√¥n tr·ªçng."
            }
        ]
    };

    return (
        <div className="min-h-screen bg-white dark:bg-gray-900">
            <div className="container mx-auto px-1 sm:px-2 py-4">
                <div className="max-w-2xl mx-auto">
                    {/* Header */}
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        className="text-center mb-6"
                    >
                        <div className="bg-white dark:bg-[#1C1C1E] rounded-2xl shadow-lg p-6 mb-4">
                            <div className="inline-flex items-center justify-center w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-xl mb-4">
                                <Shield className="w-6 h-6 text-purple-600 dark:text-purple-400" />
                            </div>
                            <h1 className="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">
                                Quy t·∫Øc c·ªông ƒë·ªìng
                            </h1>
                            <p className="text-sm text-gray-600 dark:text-gray-300">
                                C√πng nhau x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng an to√†n, th√¢n thi·ªán v√† h·ªó tr·ª£ l·∫´n nhau
                            </p>
                        </div>
                    </motion.div>

                    {/* Quick Rules Summary */}
                    <div className="space-y-3 mb-6">
                        {quickRules.map((rule, index) => (
                            <motion.div
                                key={index}
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                transition={{ delay: index * 0.1 }}
                                className="bg-white dark:bg-[#1C1C1E] rounded-lg shadow-md border border-gray-200 dark:border-gray-700 p-4"
                            >
                                <div className="flex items-start space-x-3">
                                    <div className="text-2xl">{rule.icon}</div>
                                    <div className="flex-1">
                                        <h3 className="font-semibold text-gray-800 dark:text-gray-200 mb-1">
                                            {rule.title}
                                        </h3>
                                        <p className="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
                                            {rule.description}
                                        </p>
                                    </div>
                                </div>
                            </motion.div>
                        ))}
                    </div>

                    {/* Mandatory Rules List */}
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.4 }}
                        className="bg-red-50 dark:bg-red-900/20 rounded-lg shadow-md border border-red-200 dark:border-red-800 p-4 mb-6"
                    >
                        <div className="flex items-center space-x-2 mb-3">
                            <AlertTriangle className="w-5 h-5 text-red-600 dark:text-red-400" />
                            <h3 className="font-bold text-red-800 dark:text-red-200">
                                Quy t·∫Øc b·∫Øt bu·ªôc
                            </h3>
                        </div>
                        <ul className="space-y-1">
                            {mandatoryRules.map((rule, index) => (
                                <li key={index} className="text-sm text-red-700 dark:text-red-300 flex items-start">
                                    <span className="text-red-500 mr-2">‚Ä¢</span>
                                    {rule}
                                </li>
                            ))}
                        </ul>
                    </motion.div>

                    {/* View Full Details Button */}
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.6 }}
                        className="text-center"
                    >
                        <motion.button
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}
                            onClick={openFullRules}
                            className="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300"
                        >
                            Xem chi ti·∫øt ƒë·∫ßy ƒë·ªß
                        </motion.button>
                    </motion.div>

                    {/* Footer */}
                    <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.8 }}
                        className="text-center mt-6"
                    >
                        <div className="bg-white dark:bg-[#1C1C1E] rounded-2xl shadow-lg p-6">
                            <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">C·∫£m ∆°n b·∫°n ƒë√£ ƒë·ªçc v√† tu√¢n th·ªß quy t·∫Øc!</h3>
                            <p className="text-sm text-gray-600 dark:text-gray-300">
                                C√πng nhau x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng EmoEase t√≠ch c·ª±c v√† h·ªó tr·ª£ l·∫´n nhau.
                            </p>
                        </div>
                    </motion.div>
                </div>
            </div>

            {/* Full Rules Modal */}
            <AnimatePresence>
                {showFullRules && (
                    <motion.div
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                        className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4"
                        onClick={closeFullRules}
                    >
                        <motion.div
                            initial={{ scale: 0.9, opacity: 0 }}
                            animate={{ scale: 1, opacity: 1 }}
                            exit={{ scale: 0.9, opacity: 0 }}
                            className="bg-white dark:bg-[#1C1C1E] rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden"
                            onClick={(e) => e.stopPropagation()}
                        >
                            {/* Modal Header */}
                            <div className="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
                                <h2 className="text-2xl font-bold text-gray-800 dark:text-gray-200">
                                    Quy t·∫Øc c·ªông ƒë·ªìng ƒë·∫ßy ƒë·ªß
                                </h2>
                                <button
                                    onClick={closeFullRules}
                                    className="p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
                                >
                                    <X className="w-6 h-6 text-gray-500 dark:text-gray-400" />
                                </button>
                            </div>

                            {/* Modal Content */}
                            <div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
                                <div className="space-y-8">
                                    {/* A. H∆∞·ªõng d·∫´n ·ª©ng x·ª≠ */}
                                    <div>
                                        <h3 className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-4 flex items-center">
                                            <Heart className="w-6 h-6 text-green-600 dark:text-green-400 mr-2" />
                                            A. H∆Ø·ªöNG D·∫™N ·ª®NG X·ª¨
                                        </h3>
                                        <div className="space-y-4">
                                            {fullRules.guidelines.map((rule, index) => {
                                                const Icon = rule.icon;
                                                return (
                                                    <div key={index} className="bg-gray-50 dark:bg-gray-700/50 rounded-lg p-4">
                                                        <div className="flex items-start space-x-3">
                                                            <div className="w-8 h-8 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center flex-shrink-0">
                                                                <Icon className="w-4 h-4 text-green-600 dark:text-green-400" />
                                                            </div>
                                                            <div>
                                                                <h4 className="font-semibold text-gray-800 dark:text-gray-200 mb-1">
                                                                    {rule.title}
                                                                </h4>
                                                                <p className="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
                                                                    {rule.description}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                    </div>

                                    {/* B. Quy t·∫Øc b·∫Øt bu·ªôc */}
                                    <div>
                                        <h3 className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-4 flex items-center">
                                            <AlertTriangle className="w-6 h-6 text-red-600 dark:text-red-400 mr-2" />
                                            B. QUY T·∫ÆC B·∫ÆT BU·ªòC
                                        </h3>
                                        <div className="space-y-4">
                                            {fullRules.mandatory.map((rule, index) => {
                                                const Icon = rule.icon;
                                                return (
                                                    <div key={index} className="bg-red-50 dark:bg-red-900/20 rounded-lg p-4">
                                                        <div className="flex items-start space-x-3">
                                                            <div className="w-8 h-8 bg-red-100 dark:bg-red-900/30 rounded-lg flex items-center justify-center flex-shrink-0">
                                                                <Icon className="w-4 h-4 text-red-600 dark:text-red-400" />
                                                            </div>
                                                            <div>
                                                                <h4 className="font-semibold text-red-800 dark:text-red-200 mb-1">
                                                                    {rule.title}
                                                                </h4>
                                                                <p className="text-sm text-red-700 dark:text-red-300 leading-relaxed">
                                                                    {rule.description}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                    </div>

                                    {/* C. Bi·ªán ph√°p x·ª≠ l√Ω */}
                                    <div>
                                        <h3 className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-4 flex items-center">
                                            <Scale className="w-6 h-6 text-orange-600 dark:text-orange-400 mr-2" />
                                            C. BI·ªÜN PH√ÅP X·ª¨ L√ù
                                        </h3>
                                        <div className="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-4">
                                            <p className="text-sm text-orange-800 dark:text-orange-200 mb-3 font-medium">
                                                T√πy theo m·ª©c ƒë·ªô vi ph·∫°m, EmoEase c√≥ th·ªÉ √°p d·ª•ng c√°c bi·ªán ph√°p sau:
                                            </p>
                                            <ul className="space-y-2">
                                                {fullRules.measures.map((measure, index) => (
                                                    <li key={index} className="text-sm text-orange-700 dark:text-orange-300 flex items-start">
                                                        <span className="text-orange-500 mr-2">‚Ä¢</span>
                                                        {measure}
                                                    </li>
                                                ))}
                                            </ul>
                                        </div>
                                    </div>

                                    {/* D. Tri·∫øt l√Ω thi h√†nh */}
                                    <div>
                                        <h3 className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-4 flex items-center">
                                            <BookOpen className="w-6 h-6 text-blue-600 dark:text-blue-400 mr-2" />
                                            D. TRI·∫æT L√ù THI H√ÄNH
                                        </h3>
                                        <div className="space-y-4">
                                            {fullRules.philosophy.map((item, index) => (
                                                <div key={index} className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4">
                                                    <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">
                                                        {item.title}
                                                    </h4>
                                                    <p className="text-sm text-blue-700 dark:text-blue-300 leading-relaxed">
                                                        {item.description}
                                                    </p>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </motion.div>
                    </motion.div>
                )}
            </AnimatePresence>
        </div>
    );
};

export default CommunityRulesPage;